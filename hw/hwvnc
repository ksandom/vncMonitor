#!/bin/bash
# Quickly shares a list of screens individually.
#
# Eg
# List out the possible displays to share.
#   $0 list
# 
# Start a session on eDP-1.
#   $0 eDP-1
# 
# Start sessions on eDP-1 and DP-2.
#   $0 eDP-1 DP-2

configHome=~/.vnc
passwdFile="$configHome/passwd"
ourConfig="$configHome/hwvnc"

function assertConfig
{
    if [ ! -e "$ourConfig" ]; then
        ## # This is where to configure hwvnc.
        ## 
        ## ## Default devices to share.
        ## # * Space separated.
        ## # * '' to default to none.
        ## # * 'all' to individually share all of the connected displays.
        ## # * Use `./hwvnc --list` to see possible devices to share.
        ## CONFIG_defaultShare=''
        ## 
        ## ## Shared - Whether a given connection can have multiple clients connected concurrently.
        ## CONFIG_shared='-nevershared'
        ## # CONFIG_shared='-loop -forever -shared'
        ## 
        ## ## Other options
        ## CONFIG_other='-viewonly -ssl'
        ## # CONFIG_other='-viewonly -ssl -sslonly'
        ## 
        ## ## IP addresses to ping. This is for funky home routers that regularly forget where devices are.
        ## # * Space separated
        ## CONFIG_PING_IPs=''
        ## CONFIG_PING_interval=3
        
        mkdir -p "$(dirname $ourConfig)"
        grep '  *## ' hwvnc | sed 's/.*## //g' > "$ourConfig"
    fi
}

function help
{
    grep '^# ' $0 | cut -b 3-
    
    echo -e "\\nParemeters"
    grep ') #' $0 | sed 's/) #/~~~/g' | grep -v grep | column -t -s '~~~'
}

function list
{
    xrandr | grep ' connected'
}

function getDevice
{
    cut -d\  -f1
}

function getClip
{
    cut -d'(' -f1 | sed 's/ $//g; s/^.* //g'
}


function start
{
    usepw='-usepw'
    if [ ! -e $passwdFile ]; then
        usepw=''
        echo "$passwdFile doesn't appear to exist, so no password will be required to connect. This isn't safe. I recommend running \`x11vnc -usepw\` to set it."
        for i in {10..1}; do
            echo "Waiting for you to see this message. $i... "
            sleep 1
        done
    fi
    
    x11vnc -alwaysshared "$CONFIG_shared" $usepw -clip "$2" $CONFIG_other 2>&1 | while read in; do echo "$1: $in"; done
}

function startWrapper
{
    if list | grep -q "$1"; then
        clip=$(list | grep "^$1" | getClip)
        start "$1" "$clip" &
    else
        echo "Could not find \"$2\"."
        exit 1
    fi
}

function pingThings
{
    if [ "$CONFIG_PING_IPs" != '' ]; then
        for IP in $CONFIG_PING_IPs; do
            ping -i"$CONFIG_PING_interval" "$IP" &
        done
    fi
}



assertConfig
. "$ourConfig"

case $1 in
    '--help') # Display this help.
        help
    ;;
    '--list') # List the possible displays.
        list
    ;;
    *)
        # TODO Refactor this.
        if [ "$1" != '' ]; then
            for device in "$@"; do
                startWrapper "$device"
            done
        else
            for device in $CONFIG_defaultShare; do
                startWrapper "$device"
            done
        fi
        
        pingThings
        
        wait
    ;;
esac
